// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrintingHouse.Models;

namespace PrintingHouse.Migrations
{
    [DbContext(typeof(PrintingHouseContext))]
    partial class PrintingHouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrintingHouse.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("customerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("CustomerId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("PrintingHouse.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnName("customerID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OrderDeadline")
                        .HasColumnName("orderDeadline")
                        .HasColumnType("date");

                    b.Property<int?>("OrderTypeId")
                        .HasColumnName("orderTypeID");

                    b.Property<double?>("Size")
                        .HasColumnName("size");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderTypeId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("PrintingHouse.Models.OrderCatagory", b =>
                {
                    b.Property<int>("OrderCatagoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderCatagoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(55);

                    b.HasKey("OrderCatagoryId");

                    b.ToTable("orderCatagory");
                });

            modelBuilder.Entity("PrintingHouse.Models.OrderTransaction", b =>
                {
                    b.Property<int>("OrderTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderTransactionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("OrderId")
                        .HasColumnName("orderID");

                    b.Property<int?>("PaymentId")
                        .HasColumnName("paymentID");

                    b.Property<int?>("SuplierId")
                        .HasColumnName("suplierID");

                    b.HasKey("OrderTransactionId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("SuplierId");

                    b.ToTable("orderTransaction");
                });

            modelBuilder.Entity("PrintingHouse.Models.OrderType", b =>
                {
                    b.Property<int>("OrderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("OrderTypeId");

                    b.ToTable("orderType");
                });

            modelBuilder.Entity("PrintingHouse.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("paymentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId")
                        .HasColumnName("orderID");

                    b.Property<decimal?>("PayedAmount")
                        .HasColumnName("payedAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnName("paymentDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("PrintingHouse.Models.ProPerty", b =>
                {
                    b.Property<int>("ProPertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("proPertyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("ProPertyId");

                    b.ToTable("proPerty");
                });

            modelBuilder.Entity("PrintingHouse.Models.ProdductService", b =>
                {
                    b.Property<int>("ProdductService1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prodductService")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProductId")
                        .HasColumnName("productID");

                    b.Property<int?>("ServiceId")
                        .HasColumnName("ServiceID");

                    b.HasKey("ProdductService1")
                        .HasName("PK__prodduct__EDEFB117EB6EAC7C");

                    b.ToTable("prodductService");
                });

            modelBuilder.Entity("PrintingHouse.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("productID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int?>("OrderSizeId")
                        .HasColumnName("orderSizeID");

                    b.Property<int?>("PropertyId")
                        .HasColumnName("propertyID");

                    b.HasKey("ProductId");

                    b.HasIndex("PropertyId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("PrintingHouse.Models.ProductProperty", b =>
                {
                    b.Property<int>("ProductPropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("productPropertyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProPertyId")
                        .HasColumnName("proPertyID");

                    b.Property<int?>("ProductId")
                        .HasColumnName("productID");

                    b.HasKey("ProductPropertyId");

                    b.HasIndex("ProPertyId");

                    b.HasIndex("ProductId");

                    b.ToTable("productProperty");
                });

            modelBuilder.Entity("PrintingHouse.Models.ProductSize", b =>
                {
                    b.Property<int>("ProductSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("productSizeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProductId")
                        .HasColumnName("productID");

                    b.Property<int?>("SizeId")
                        .HasColumnName("sizeID");

                    b.HasKey("ProductSizeId");

                    b.HasIndex("ProductId");

                    b.ToTable("productSize");
                });

            modelBuilder.Entity("PrintingHouse.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ServiceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("ServiceId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("PrintingHouse.Models.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sizeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("SizeId");

                    b.ToTable("size");
                });

            modelBuilder.Entity("PrintingHouse.Models.Suplier", b =>
                {
                    b.Property<int>("SuplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("suplierID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("SuplierId");

                    b.ToTable("suplier");
                });

            modelBuilder.Entity("PrintingHouse.Models.Order", b =>
                {
                    b.HasOne("PrintingHouse.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__order__customerI__6E01572D");

                    b.HasOne("PrintingHouse.Models.OrderType", "OrderType")
                        .WithMany("Order")
                        .HasForeignKey("OrderTypeId")
                        .HasConstraintName("FK__order__orderType__6EF57B66");
                });

            modelBuilder.Entity("PrintingHouse.Models.OrderTransaction", b =>
                {
                    b.HasOne("PrintingHouse.Models.Order", "Order")
                        .WithMany("OrderTransaction")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__orderTran__order__6FE99F9F");

                    b.HasOne("PrintingHouse.Models.Payment", "Payment")
                        .WithMany("OrderTransaction")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__orderTran__payme__70DDC3D8");

                    b.HasOne("PrintingHouse.Models.Suplier", "Suplier")
                        .WithMany("OrderTransaction")
                        .HasForeignKey("SuplierId")
                        .HasConstraintName("FK__orderTran__supli__71D1E811");
                });

            modelBuilder.Entity("PrintingHouse.Models.Payment", b =>
                {
                    b.HasOne("PrintingHouse.Models.Order", "Order")
                        .WithMany("Payment")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__payment__orderID__72C60C4A");
                });

            modelBuilder.Entity("PrintingHouse.Models.Product", b =>
                {
                    b.HasOne("PrintingHouse.Models.ProPerty", "Property")
                        .WithMany("Product")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK__product__propert__22751F6C");
                });

            modelBuilder.Entity("PrintingHouse.Models.ProductProperty", b =>
                {
                    b.HasOne("PrintingHouse.Models.ProPerty", "ProPerty")
                        .WithMany("ProductProperty")
                        .HasForeignKey("ProPertyId")
                        .HasConstraintName("FK__productPr__proPe__2645B050");

                    b.HasOne("PrintingHouse.Models.Product", "Product")
                        .WithMany("ProductProperty")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__productPr__produ__25518C17");
                });

            modelBuilder.Entity("PrintingHouse.Models.ProductSize", b =>
                {
                    b.HasOne("PrintingHouse.Models.Product", "Product")
                        .WithMany("ProductSize")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__productSi__produ__245D67DE");
                });
#pragma warning restore 612, 618
        }
    }
}
